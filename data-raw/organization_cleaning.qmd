---
title: "Organization Cleaning"
format: html
editor: visual
---

## Organizations

Structure of old organization data:

"Organization" "Address" "County" "Sector" "Type" "lon" "lat" "county_name" "lat_c" "long" "search"

```{r}
library(tidyverse)
library(janitor)
library(readxl)
library(sf)
library(leaflet)
library(reactable)
library(googlesheets4)
library(tidygeocoder)

knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())

```

You can add options to executable code like this

```{r}
#| echo: false

orgs_raw <- read_sheet('https://docs.google.com/spreadsheets/d/1-F1iy0egi3q7WtNyn4MvTwsoLeRYCRLowGQgdrG0_cM/edit?usp=sharing') |> 
  clean_names()

  met_pallete_geo <- MetBrewer::met.brewer(name="Isfahan2",n=20)
  met_pallete_geo <- as.character(met_pallete_geo)
  
reactable(orgs_raw)
```

## Map

```{r, mapview}

pal =       colorFactor(
  palette = met_pallete_geo,
  reverse = FALSE,
  domain = orgs_raw$type,
  na.color = rgb(0, 0, 0, 0)
)
  
# create map widget with OpenStreetMap tile
map <- leaflet(orgs_raw) %>%
  addTiles() %>%
  addCircleMarkers(
    lng =  ~ longitude,
    lat =  ~ latitude,
    color = ~ type,
    fillColor = ~ pal(type),
    fillOpacity = .7,
    popup =  ~ organization
  ) %>%
  addLegend('bottomright', pal=pal, values = ~type)

# print map widget
map

```

## Types

```{r}
unique(orgs_raw$type)
```

## Definitions

```{r defs}

defs_raw <- read_sheet('https://docs.google.com/spreadsheets/d/10qLQl-JBvuOY-apBOAOKZEbz4xPcl7mOya0eMbMePss/edit?usp=sharing') |> 
  clean_names()

```

Categorizing master list

```{r sub}

cat <- defs_raw |>
  select(type_acronym, category)

orgs <- orgs_raw |>
  left_join(cat, by = c('type' = 'type_acronym')) |>
  mutate(
    category = case_when(is.na(category) ~ 'Other',
                         TRUE ~ category),
    search = category,
    county_name = paste0(county, " ", "County,TX")
  )

```

## Getting long lat of counties

```{r}

#you have to put this in the console......tf
# county_lonlat <- read_csv("data/county_lonlat.csv")
# library(tidyverse)
# orgs -> orgs |> 
#   left_join(county_lonlat, by = c('county' = 'County'))
```
